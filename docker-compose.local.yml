version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: trashscanner_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: trashscanner
      POSTGRES_PASSWORD: trashscanner
      POSTGRES_DB: trashscanner_db
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trashscanner -d trashscanner_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - trashscanner_network

  minio:
    image: minio/minio:latest
    container_name: trashscanner_minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - trashscanner_network

  minio-init:
    image: minio/mc:latest
    container_name: trashscanner_minio_init
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 minioadmin minioadmin;
      mc mb local/trashscanner-images --ignore-existing;
      mc anonymous set download local/trashscanner-images;
      echo 'MinIO bucket created successfully';
      exit 0;
      "
    networks:
      - trashscanner_network

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local

networks:
  trashscanner_network:
    driver: bridge
