// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package db

import (
	"net/netip"
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type LoginHistory struct {
	ID            uuid.UUID   `json:"id"`
	UserID        uuid.UUID   `json:"user_id"`
	Success       bool        `json:"success"`
	FailureReason *string     `json:"failure_reason"`
	IpAddress     *netip.Addr `json:"ip_address"`
	UserAgent     *string     `json:"user_agent"`
	Location      *string     `json:"location"`
	CreatedAt     time.Time   `json:"created_at"`
}

type Prediction struct {
	ID        uuid.UUID `json:"id"`
	UserID    uuid.UUID `json:"user_id"`
	TrashScan string    `json:"trash_scan"`
	Status    string    `json:"status"`
	Result    []byte    `json:"result"`
	Error     *string   `json:"error"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type RefreshToken struct {
	ID        uuid.UUID          `json:"id"`
	UserID    uuid.UUID          `json:"user_id"`
	TokenHash string             `json:"token_hash"`
	ExpiresAt time.Time          `json:"expires_at"`
	Revoked   bool               `json:"revoked"`
	RevokedAt pgtype.Timestamptz `json:"revoked_at"`
	CreatedAt time.Time          `json:"created_at"`
	UpdatedAt time.Time          `json:"updated_at"`
}

type Stat struct {
	ID           uuid.UUID `json:"id"`
	UserID       uuid.UUID `json:"user_id"`
	Status       string    `json:"status"`
	Rating       int32     `json:"rating"`
	FilesScanned int32     `json:"files_scanned"`
	TotalWeight  float64   `json:"total_weight"`
	Achievements []byte    `json:"achievements"`
	TrashByTypes []byte    `json:"trash_by_types"`
	CreatedAt    time.Time `json:"created_at"`
	UpdatedAt    time.Time `json:"updated_at"`
}

type User struct {
	ID             uuid.UUID `json:"id"`
	Login          string    `json:"login"`
	Name           string    `json:"name"`
	HashedPassword string    `json:"hashed_password"`
	Avatar         *string   `json:"avatar"`
	Deleted        bool      `json:"deleted"`
	CreatedAt      time.Time `json:"created_at"`
	UpdatedAt      time.Time `json:"updated_at"`
}
